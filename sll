#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;           
    struct Node* next;  
};


struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));  
    newNode->data = data;    
    newNode->next = NULL;      
    return newNode;            
}


void insertAtFirst(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    newNode->next = *head;                   
    *head = newNode;                         
}

// Function to insert a node at the end
void insertAtEnd(struct Node** head, int data) {
    struct Node* newNode = createNode(data);  
    if (*head == NULL) {                      
        *head = newNode;                     
        return;
    }
    struct Node* temp = *head;                
    while (temp->next != NULL) {              
        temp = temp->next;
    }
    temp->next = newNode;                    
}


void insertAtPosition(struct Node** head, int data, int position) {
    if (position == 0) {                      
        insertAtFirst(head, data);
        return;
    }
    struct Node* newNode = createNode(data);  
    struct Node* temp = *head;                
    for (int i = 0; temp != NULL && i < position - 1; i++) {
        temp = temp->next;                    
    }
    if (temp == NULL) {                       
        printf("Position is greater than the length of the list.\n");
        free(newNode);                      
    } else {
        newNode->next = temp->next;          
        temp->next = newNode;                 
    }
}

// Function to display the linked list
void displayList(struct Node* head) {
    struct Node* temp = head;                 
    while (temp != NULL) {                   
        printf("%d -> ", temp->data);         
        temp = temp->next;                   
    }
    printf("NULL\n");                        
}


int main() {
    struct Node* head = NULL;                 
    int choice, data, position;

    do {
        
        printf("\n1. Insert at First\n");
        printf("2. Insert at End\n");
        printf("3. Insert at Position\n");
        printf("4. Display List\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);               

        switch (choice) {
            case 1:
                printf("Enter data to insert at first: ");
                scanf("%d", &data);
                insertAtFirst(&head, data);  
                break;
            case 2:
                printf("Enter data to insert at end: ");
                scanf("%d", &data);
                insertAtEnd(&head, data);     
                break;
            case 3:
                printf("Enter position and data to insert: ");
                scanf("%d %d", &position, &data);
                insertAtPosition(&head, data, position); 
                break;
            case 4:
                printf("Linked List: ");
                displayList(head);          
                break;
            case 5:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 5);                 

    return 0;                                 
}
