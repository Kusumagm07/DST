#include <stdio.h>
#include <stdlib.h>

// Define the structure for a node
struct node {
    int data;
    struct node* next;
};

// Function to delete a node from the beginning
void deleteatbeginning(struct node** head) {
    if (*head == NULL) {
        return;
    }
    struct node* temp = *head;
    *head = (*head)->next;
    free(temp);
}

// Function to delete a node from the end
void deleteatend(struct node** head) {
    if (*head == NULL) {
        return;
    }
    if ((*head)->next == NULL) {
        free(*head);
        *head = NULL;
        return;
    }
    struct node* temp = *head;
    struct node* prev = NULL;
    while (temp->next != NULL) {
        prev = temp;
        temp = temp->next;
    }
    prev->next = NULL;
    free(temp);
}

// Function to delete a node at a specific position
void deleteatposition(struct node** head, int position) {
    if (*head == NULL) {
        return;
    }
    if (position == 0) { // Delete at the beginning
        deleteatbeginning(head);
        return;
    }
    struct node* temp = *head;
    struct node* prev = NULL;
    int count = 0;
    while (temp != NULL && count < position) {
        prev = temp;
        temp = temp->next;
        count++;
    }
    if (temp == NULL) { // Position out of range
        return;
    }
    prev->next = temp->next;
    free(temp);
}

// Function to display all elements in the list
void listelements(struct node* head) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }
    struct node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct node* head = NULL;
    struct node* temp = NULL;
    int data;
    int choice;
    int position;

    // Input data to add to the list
    printf("Enter numbers to add to the list (Enter -1 to stop): \n");
    while (1) {
        scanf("%d", &data);
        if (data == -1) {
            break;
        }
        struct node* newnode = (struct node*)malloc(sizeof(struct node));
        newnode->data = data;
        newnode->next = NULL;

        if (head == NULL) {
            head = newnode;
        } else {
            temp->next = newnode;
        }
        temp = newnode;
    }

    // Display the initial list
    printf("Initial list:\n");
    listelements(head);

    while (1) {
        printf("\n1. Delete at the beginning\n");
        printf("2. Delete at the end\n");
        printf("3. Delete at a specific position\n");
        printf("4. List elements\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                deleteatbeginning(&head);
                break;
            case 2:
                deleteatend(&head);
                break;
            case 3:
                printf("Enter position to delete: ");
                scanf("%d", &position);
                deleteatposition(&head, position);
                break;
            case 4:
                listelements(head);
                continue;
            case 5:
                return 0;
            default:
                printf("Invalid choice! \n");
                continue;
        }

        // Display the updated list
        printf("Updated list:\n");
        listelements(head);
    }

    return 0;
}
