#include <stdio.h>
#define MAX 5

int queue[MAX];
int front = -1, rear = -1;

void insert() {
    int element;
    if ((rear + 1) % MAX == front) {
        printf("Queue Overflow! Cannot insert element.\n");
        return;
    }
    printf("Enter the element to insert: ");
    scanf("%d", &element);

    if (front == -1) { 
        front = rear = 0;
    } else {
        rear = (rear + 1) % MAX;
    }
    
    queue[rear] = element;  // Corrected placement of this line
    printf("Inserted %d into the queue.\n", element);
}

void delete() {
    if (front == -1) {
        printf("Queue Underflow! Queue is empty.\n");
        return;
    }

    printf("Deleted element: %d\n", queue[front]);
    if (front == rear) { 
        front = rear = -1; 
    } else {
        front = (front + 1) % MAX; 
    }
}

void display() {
    if (front == -1) {
        printf("Queue is empty.\n");
        return;
    }

    printf("Queue elements: ");
    int i = front;
    while (i != rear) {
        printf("%d ", queue[i]);
        i = (i + 1) % MAX;
    }
    printf("%d\n", queue[rear]);
}

int main() {
    int choice;

    do {
        printf("\nCircular Queue Operations:\n");
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                insert();
                break;
            case 2:
                delete();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 4);

    return 0; 
}
